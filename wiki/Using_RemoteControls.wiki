#labels Featured,Phase-Deploy,Phase-Implementation
= Introduction =

With this sample, you can assign any work to the pressed buttons. You should know the values from your remote controller, before use this code.
Check the Sample_Atmel_Studio or Sample_Arduino_IDE to get this values.

It uses the Arduino digital pin 12 for the infrared receiver and debug mode will be off, because we know the values.


= Code =

{{{
// Definitions to use in library. Add it BEFORE the library include
#define Pulses             32
#define MaxWaitingTime 100000
#define FirstPulseLength 4000
#define HighPulseLength  1400
#define LowPulseLength	  300

// Definition for keys
#define KEY_POWER 127
#define KEY_NEXT  237
#define KEY_BACK   29
#define KEY_OK     45

#include <RemoteControls.cpp> // AtmelStudio users add .cpp, ArduinoIde users, add .h


RemoteControl rc(12,false); //Declaration using pin 12 and debug disabled

void KeyWork(uint8_t value);// Prototype for the function with the code for each button

void setup(){
  // Yep, nothing needed here!
}

void loop(){
  KeyWork(rc.PressedButton()); // Call of our works function with the pressed key value
}
//-------------------------------------------------------
void KeyWork(uint8_t value){
  if(value==KEY_POWER){
    // Add your stuff here
  }else if(Value==KEY_NEXT){
    // Add your stuff here
  }else if(Value==KEY_BACK){
    // Add your stuff here
  }else if(Value==KEY_OK){
    // Add your stuff here
  }
}
}}}